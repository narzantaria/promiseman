"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.spawn = exports.fork = exports.execFile = exports.exec = exports.copy = exports.write = exports.watch = exports.utimes = exports.unlink = exports.truncate = exports.symlink = exports.statfs = exports.stat = exports.rmdir = exports.rm = exports.rename = exports.realpath = exports.readlink = exports.readdir = exports.read = exports.opendir = exports.open = exports.mkdtemp = exports.mkdir = exports.lutimes = exports.lstat = exports.link = exports.lchown = exports.cp = exports.copyFile = exports.chown = exports.chmod = exports.appendFile = exports.access = void 0;
const fs_1 = require("fs");
const fs_extra_1 = __importDefault(require("fs-extra"));
const util_1 = __importDefault(require("util"));
const child_process_1 = __importDefault(require("child_process"));
// fs promises
exports.access = fs_1.promises.access;
exports.appendFile = fs_1.promises.appendFile;
exports.chmod = fs_1.promises.chmod;
exports.chown = fs_1.promises.chown;
exports.copyFile = fs_1.promises.copyFile;
exports.cp = fs_1.promises.cp;
exports.lchown = fs_1.promises.lchown;
exports.link = fs_1.promises.link;
exports.lstat = fs_1.promises.lstat;
exports.lutimes = fs_1.promises.lutimes;
exports.mkdir = fs_1.promises.mkdir;
exports.mkdtemp = fs_1.promises.mkdtemp;
exports.open = fs_1.promises.open;
exports.opendir = fs_1.promises.opendir;
exports.read = fs_1.promises.readFile;
exports.readdir = fs_1.promises.readdir;
exports.readlink = fs_1.promises.readlink;
exports.realpath = fs_1.promises.realpath;
exports.rename = fs_1.promises.rename;
exports.rm = fs_1.promises.rm;
exports.rmdir = fs_1.promises.rmdir;
exports.stat = fs_1.promises.stat;
exports.statfs = fs_1.promises.statfs;
exports.symlink = fs_1.promises.symlink;
exports.truncate = fs_1.promises.truncate;
exports.unlink = fs_1.promises.unlink;
exports.utimes = fs_1.promises.utimes;
exports.watch = fs_1.promises.watch;
exports.write = fs_1.promises.writeFile;
// other
exports.copy = util_1.default.promisify(fs_extra_1.default.copy);
exports.exec = util_1.default.promisify(child_process_1.default.exec);
exports.execFile = util_1.default.promisify(child_process_1.default.execFile);
exports.fork = util_1.default.promisify(child_process_1.default.fork);
exports.spawn = util_1.default.promisify(child_process_1.default.spawn);
